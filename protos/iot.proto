syntax = "proto3";

package iot;

// *****************************************
// Machine message service
// *****************************************
service MachineMessages {
  rpc RegisterMachine (RegisterCmd) returns (RegisterResp) {}
}

// Machine commands
enum MachineCmd {
  M_UNUSED = 0;
  M_REGISTER = 1;
}

// Machine command response status
enum MachineStatus {
  MS_UNUSED = 0;
  MS_GOOD = 1;
}

// Register machine COMMAND message.
message RegisterCmd {
  MachineCmd cmd = 1;
}

// Register machine RESPONSE message.
message RegisterResp {
  MachineStatus status = 1;
  uint32 uID = 2;
}

// *****************************************
// Controller message service
// *****************************************
service ControllerMessages {
  rpc KickWatchdog (WatchdogCmd) returns (WatchdogResp) {}
}

// Controller commands
enum ControllerCmd {
  C_UNUSED = 0;
  C_WATCHDOG = 1;
}

// Controller command response status
enum ControllerStatus {
  CS_UNUSED = 0;
  CS_GOOD = 1;
}

// Kick watchdog COMMAND message.
message WatchdogCmd {
  ControllerCmd cmd = 1;
}

// Kick watchdog RESPONSE message.
message WatchdogResp {
  ControllerStatus status = 1;
}
